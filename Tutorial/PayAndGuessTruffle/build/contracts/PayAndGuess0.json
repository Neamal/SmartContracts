{
  "contractName": "PayAndGuess0",
  "abi": [
    {
      "inputs": [],
      "name": "paid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payer",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "doPay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disburse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"disburse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doPay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PayAndGuess0.sol\":\"PayAndGuess0\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/PayAndGuess0.sol\":{\"keccak256\":\"0x42485a8bf03478dc7a1b0464369456a4d0ae9f27930963149833cc84d7e0c19e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8938108cad3a8ee88a263e55d676328aac99d3385b0b2c168b55b40654fc93d\",\"dweb:/ipfs/QmdwcU3vvK53EbMTHkyEFUFa5ZuHFhgZndyGbXGPbg827w\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610352806100206000396000f3fe60806040526004361061003f5760003560e01c8063123119cd14610044578063295b4e171461006f5780636b976dda1461009a578063abc6fd0b146100a4575b600080fd5b34801561005057600080fd5b506100596100bb565b6040516100669190610250565b60405180910390f35b34801561007b57600080fd5b506100846100df565b604051610091919061028b565b60405180910390f35b6100a26100e5565b005b3480156100b057600080fd5b506100b961012e565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550565b600060015411610173576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016a9061026b565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050501580156101e1573d6000803e3d6000fd5b506000806101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560016000905550565b610218816102b7565b82525050565b600061022b6014836102a6565b9150610236826102f3565b602082019050919050565b61024a816102e9565b82525050565b6000602082019050610265600083018461020f565b92915050565b600060208201905081810360008301526102848161021e565b9050919050565b60006020820190506102a06000830184610241565b92915050565b600082825260208201905092915050565b60006102c2826102c9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e6f7468696e6720746f2064697362757273652e00000000000000000000000060008201525056fea2646970667358221220e6216d9aa8fd920f03bc5008940f173f37c38be16630e383b5a6adfc4171f4db64736f6c63430008030033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c8063123119cd14610044578063295b4e171461006f5780636b976dda1461009a578063abc6fd0b146100a4575b600080fd5b34801561005057600080fd5b506100596100bb565b6040516100669190610250565b60405180910390f35b34801561007b57600080fd5b506100846100df565b604051610091919061028b565b60405180910390f35b6100a26100e5565b005b3480156100b057600080fd5b506100b961012e565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550565b600060015411610173576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016a9061026b565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050501580156101e1573d6000803e3d6000fd5b506000806101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560016000905550565b610218816102b7565b82525050565b600061022b6014836102a6565b9150610236826102f3565b602082019050919050565b61024a816102e9565b82525050565b6000602082019050610265600083018461020f565b92915050565b600060208201905081810360008301526102848161021e565b9050919050565b60006020820190506102a06000830184610241565b92915050565b600082825260208201905092915050565b60006102c2826102c9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e6f7468696e6720746f2064697362757273652e00000000000000000000000060008201525056fea2646970667358221220e6216d9aa8fd920f03bc5008940f173f37c38be16630e383b5a6adfc4171f4db64736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2237:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "88:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "105:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "136:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "110:25:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "110:32:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "98:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "98:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "98:45:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "76:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "83:3:1",
                "type": ""
              }
            ],
            "src": "7:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "301:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "311:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "377:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "382:2:1",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "318:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "311:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "483:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_be25b632ce52a3dfee13d745b1061f4d4381d6fa17e3de589ebe2045e34f8792",
                      "nodeType": "YulIdentifier",
                      "src": "394:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "394:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "394:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "496:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "507:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "503:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "503:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "496:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_be25b632ce52a3dfee13d745b1061f4d4381d6fa17e3de589ebe2045e34f8792_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "289:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "297:3:1",
                "type": ""
              }
            ],
            "src": "155:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "592:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "609:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "632:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "614:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "614:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "602:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "602:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "602:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "580:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "587:3:1",
                "type": ""
              }
            ],
            "src": "527:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "765:140:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "775:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "787:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "783:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "783:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "775:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "871:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "884:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "895:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "880:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "880:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "811:59:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:87:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "811:87:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "737:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "760:4:1",
                "type": ""
              }
            ],
            "src": "651:254:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1082:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1092:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1104:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1115:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1100:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1092:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1139:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1150:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1135:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1135:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1158:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1164:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1154:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1154:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1128:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1128:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1184:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1318:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_be25b632ce52a3dfee13d745b1061f4d4381d6fa17e3de589ebe2045e34f8792_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1192:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1192:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1184:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_be25b632ce52a3dfee13d745b1061f4d4381d6fa17e3de589ebe2045e34f8792__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1062:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1077:4:1",
                "type": ""
              }
            ],
            "src": "911:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1434:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1444:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1456:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1467:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1452:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1452:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1444:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1524:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1537:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1548:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1533:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1533:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1480:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1480:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1480:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1406:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1418:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1429:4:1",
                "type": ""
              }
            ],
            "src": "1336:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1660:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1677:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1682:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1670:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1670:19:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1670:19:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1698:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1717:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1722:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1713:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1713:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1698:11:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1632:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1637:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1648:11:1",
                "type": ""
              }
            ],
            "src": "1564:169:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1792:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1802:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1831:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1813:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1813:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1802:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1774:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1784:7:1",
                "type": ""
              }
            ],
            "src": "1739:104:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1894:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1904:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1919:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1926:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1915:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1915:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1904:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1876:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1886:7:1",
                "type": ""
              }
            ],
            "src": "1849:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2026:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2036:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2047:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2036:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2008:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2018:7:1",
                "type": ""
              }
            ],
            "src": "1981:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2170:64:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2192:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2200:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2188:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2188:14:1"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2204:22:1",
                        "type": "",
                        "value": "Nothing to disburse."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2181:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2181:46:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2181:46:1"
                }
              ]
            },
            "name": "store_literal_in_memory_be25b632ce52a3dfee13d745b1061f4d4381d6fa17e3de589ebe2045e34f8792",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2162:6:1",
                "type": ""
              }
            ],
            "src": "2064:170:1"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_stringliteral_be25b632ce52a3dfee13d745b1061f4d4381d6fa17e3de589ebe2045e34f8792_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_be25b632ce52a3dfee13d745b1061f4d4381d6fa17e3de589ebe2045e34f8792(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_be25b632ce52a3dfee13d745b1061f4d4381d6fa17e3de589ebe2045e34f8792__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be25b632ce52a3dfee13d745b1061f4d4381d6fa17e3de589ebe2045e34f8792_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function store_literal_in_memory_be25b632ce52a3dfee13d745b1061f4d4381d6fa17e3de589ebe2045e34f8792(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to disburse.\")\n\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "96:482:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "96:482:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;124:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;159:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;182:102;;;:::i;:::-;;290:286;;;;;;;;;;;;;:::i;:::-;;124:28;;;;;;;;;;;;:::o;159:16::-;;;;:::o;182:102::-;240:10;224:5;;:27;;;;;;;;;;;;;;;;;;268:9;261:4;:16;;;;182:102::o;290:286::-;342:1;335:4;;:8;327:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;378:21;402:5;;;;;;;;;;;378:29;;462:5;:14;;:20;477:4;;462:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:5;;536:12;;;;;;;;;;;565:4;558:11;;;290:286;:::o;7:142:1:-;110:32;136:5;110:32;:::i;:::-;105:3;98:45;88:61;;:::o;155:366::-;;318:67;382:2;377:3;318:67;:::i;:::-;311:74;;394:93;483:3;394:93;:::i;:::-;512:2;507:3;503:12;496:19;;301:220;;;:::o;527:118::-;614:24;632:5;614:24;:::i;:::-;609:3;602:37;592:53;;:::o;651:254::-;;798:2;787:9;783:18;775:26;;811:87;895:1;884:9;880:17;871:6;811:87;:::i;:::-;765:140;;;;:::o;911:419::-;;1115:2;1104:9;1100:18;1092:26;;1164:9;1158:4;1154:20;1150:1;1139:9;1135:17;1128:47;1192:131;1318:4;1192:131;:::i;:::-;1184:139;;1082:248;;;:::o;1336:222::-;;1467:2;1456:9;1452:18;1444:26;;1480:71;1548:1;1537:9;1533:17;1524:6;1480:71;:::i;:::-;1434:124;;;;:::o;1564:169::-;;1682:6;1677:3;1670:19;1722:4;1717:3;1713:14;1698:29;;1660:73;;;;:::o;1739:104::-;;1813:24;1831:5;1813:24;:::i;:::-;1802:35;;1792:51;;;:::o;1849:126::-;;1926:42;1919:5;1915:54;1904:65;;1894:81;;;:::o;1981:77::-;;2047:5;2036:16;;2026:32;;;:::o;2064:170::-;2204:22;2200:1;2192:6;2188:14;2181:46;2170:64;:::o",
  "source": "//by Christopher Chang, Alexander Kurz\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.3;\n\ncontract PayAndGuess0 {\n    address payable public payer; \n    uint public paid;\n\n    function doPay() public payable {\n        payer = payable(msg.sender);\n        paid = msg.value;\n    }\n\n    function disburse() public {\n        require(paid > 0, \"Nothing to disburse.\");\n        address payable payee = payer;\n\n        // transfer the money to the player\n        payee.transfer(paid);\n\n        // reset info on player to default\n        delete payer;\n        delete paid;\n    }\n}",
  "sourcePath": "/Users/alexanderkurz/alexhkurz-at-github/SmartContracts/Tutorial/PayAndGuessTruffle/contracts/PayAndGuess0.sol",
  "ast": {
    "absolutePath": "project:/contracts/PayAndGuess0.sol",
    "exportedSymbols": {
      "PayAndGuess0": [
        50
      ]
    },
    "id": 51,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "71:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 50,
        "linearizedBaseContracts": [
          50
        ],
        "name": "PayAndGuess0",
        "nameLocation": "105:12:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "123119cd",
            "id": 3,
            "mutability": "mutable",
            "name": "payer",
            "nameLocation": "147:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 50,
            "src": "124:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "124:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "295b4e17",
            "id": 5,
            "mutability": "mutable",
            "name": "paid",
            "nameLocation": "171:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 50,
            "src": "159:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "159:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "214:70:0",
              "statements": [
                {
                  "expression": {
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8,
                      "name": "payer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "224:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 11,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "240:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "240:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "232:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 9,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "232:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "232:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "224:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "224:27:0"
                },
                {
                  "expression": {
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16,
                      "name": "paid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "261:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 17,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "268:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "268:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "261:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "261:16:0"
                }
              ]
            },
            "functionSelector": "6b976dda",
            "id": 22,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doPay",
            "nameLocation": "191:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "196:2:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "214:0:0"
            },
            "scope": 50,
            "src": "182:102:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "317:259:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26,
                          "name": "paid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "335:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "342:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "335:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f2064697362757273652e",
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "345:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be25b632ce52a3dfee13d745b1061f4d4381d6fa17e3de589ebe2045e34f8792",
                          "typeString": "literal_string \"Nothing to disburse.\""
                        },
                        "value": "Nothing to disburse."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be25b632ce52a3dfee13d745b1061f4d4381d6fa17e3de589ebe2045e34f8792",
                          "typeString": "literal_string \"Nothing to disburse.\""
                        }
                      ],
                      "id": 25,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "327:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "327:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "327:41:0"
                },
                {
                  "assignments": [
                    33
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33,
                      "mutability": "mutable",
                      "name": "payee",
                      "nameLocation": "394:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 48,
                      "src": "378:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 32,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "378:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35,
                  "initialValue": {
                    "id": 34,
                    "name": "payer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3,
                    "src": "402:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "378:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39,
                        "name": "paid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "477:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 36,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "462:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "462:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "462:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "462:20:0"
                },
                {
                  "expression": {
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "536:12:0",
                    "subExpression": {
                      "id": 42,
                      "name": "payer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "543:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "536:12:0"
                },
                {
                  "expression": {
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "558:11:0",
                    "subExpression": {
                      "id": 45,
                      "name": "paid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "565:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "558:11:0"
                }
              ]
            },
            "functionSelector": "abc6fd0b",
            "id": 49,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disburse",
            "nameLocation": "299:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "317:0:0"
            },
            "scope": 50,
            "src": "290:286:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 51,
        "src": "96:482:0"
      }
    ],
    "src": "71:507:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-01-14T21:41:24.501Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}